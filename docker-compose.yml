---
version: '3'

##################### Kafka Infrastructure - zookeeper, kafka, kadmin, schema-registry, kafka-rest #############
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-host
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://docker.for.mac.host.internal:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: sr-host
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: sr-host
      SCHEMA_REGISTRY_LISTENERS: http://sr-host:8081
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"

  kadmin:
    image: bettercloud/kadmin
    hostname: kadmin-host
    ports:
      - 7080:8080
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      KEY_PASSWORD: 1
      KEY_STORE_PASSWORD: 1
      KEY_STORE_LOCATION: 1
      TRUST_STORE_PASSWORD: 1
      TRUST_STORE_LOCATION: 1
      ZOOKEEPER_HOST: zookeeper:2181
      KAFKA_HOST: docker.for.mac.host.internal:9092
    extra_hosts:
      - "localhost: 127.0.0.1"

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    hostname: kr-host
    ports:
      - 9080:9080
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://kr-host:9080
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://sr-host:8081
      KAFKA_REST_HOST_NAME: kr-host
      KAFKA_REST_BOOTSTRAP_SERVERS: docker.for.mac.host.internal:9092
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"

################ End of Kafka Infrastructure #############

##################### ElasticSearch - 6.2.0 #############
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0
    environment:
      - node.name=es01
      - cluster.name=directory
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.threshold_enabled=false
      - auto_create_index=false
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch3/data
    ports:
      - 9200:9200
      - 9300:9300

################ End of ElasticSearch Infrastructure  ##########

###################### MySQL #############
  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: {{password}}
    volumes:
      - /Users/Shared/mysql:/var/lib/mysql
  ##################### MYSQL - 6.2.0 #############

##################### Redis #############
  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - redis-net
    volumes:
      - redis-data:/data
    extra_hosts:
      - "localhost: 127.0.0.1"
################ End of Redis Infrastructure  ##########

##################### pubsub #########################
  pubsub:
    image: singularities/pubsub-emulator
    environment:
      - PUBSUB_PROJECT_ID=bettercloud-non-prod
      - PUBSUB_LISTEN_ADDRESS=0.0.0.0:8085
    ports:
      - "8085:8085"
################ End of Redis Infrastructure  ##########


#################### Bigtable emulator #############
  big-table:
    image: shopify/bigtable-emulator
    ports:
      - 9035:9035
    environment:
      - cf=local-instance.dapr_scan_job_asset_local.asset, local-instance.dapr_scan_cursor_local.cursor
    extra_hosts:
      - "localhost: 127.0.0.1"
#################### End Pubsub bigtable emulator #############

#################### SonarQube #######################
#  postgresql:
#    image: 'bitnami/postgresql:latest'
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
#      - POSTGRESQL_USER=bn_sonarqube
#      - POSTGRESQL_DATABASE=bitnami_sonarqube
#      - POSTGRESQL_PASSWORD=bitnami1234
#    volumes:
#      - /Users/Shared/postgresql:/bitnami/postgresql
#
#  sonarqube:
#    image: bitnami/sonarqube:latest
#    depends_on:
#      - postgresql
#    ports:
#      - 9000:9000
#    environment:
#      - SONARQUBE_DATABASE_USER=bn_sonarqube
#      - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
#      - SONARQUBE_DATABASE_PASSWORD=bitnami1234
#      - ALLOW_EMPTY_PASSWORD=yes
#    volumes:
#      - /Users/Shared/sonarqube:/bitnami

########################################################

networks:
  redis-net:

volumes:
  esdata01:
    driver: local
  redis-data:
    driver: local

